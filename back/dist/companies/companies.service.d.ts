import { PrismaService } from '../prisma/prisma.service';
import { CreateCompanyDto } from './createCompany.dto';
export declare class CompanyService {
    private readonly prisma;
    constructor(prisma: PrismaService);
    getAllCompaniesServices(): Promise<{
        company_id: string;
        user_id: string;
        company_name: string;
        tax_identification_number: number;
        address: string;
        postal_code: string;
        city: string;
        state: string;
        country: string;
        industry: string;
        website: string | null;
        account_paypal: string | null;
        company_description: string | null;
        company_logo: string;
        isActive: boolean;
    }[]>;
    getCompanyByIdServices(companyId: string): Promise<{
        company_id: string;
        user_id: string;
        company_name: string;
        tax_identification_number: number;
        address: string;
        postal_code: string;
        city: string;
        state: string;
        country: string;
        industry: string;
        website: string | null;
        account_paypal: string | null;
        company_description: string | null;
        company_logo: string;
        isActive: boolean;
    }>;
    createCompanyServices(companyData: CreateCompanyDto): Promise<{
        company_id: string;
        user_id: string;
        company_name: string;
        tax_identification_number: number;
        address: string;
        postal_code: string;
        city: string;
        state: string;
        country: string;
        industry: string;
        website: string | null;
        account_paypal: string | null;
        company_description: string | null;
        company_logo: string;
        isActive: boolean;
    }>;
    updateCompanyServices(companyId: string, companyData: CreateCompanyDto): Promise<{
        company_id: string;
        user_id: string;
        company_name: string;
        tax_identification_number: number;
        address: string;
        postal_code: string;
        city: string;
        state: string;
        country: string;
        industry: string;
        website: string | null;
        account_paypal: string | null;
        company_description: string | null;
        company_logo: string;
        isActive: boolean;
    }>;
    softDeleteCompanyServices(companyId: string): Promise<{
        company_id: string;
        user_id: string;
        company_name: string;
        tax_identification_number: number;
        address: string;
        postal_code: string;
        city: string;
        state: string;
        country: string;
        industry: string;
        website: string | null;
        account_paypal: string | null;
        company_description: string | null;
        company_logo: string;
        isActive: boolean;
    }>;
}
